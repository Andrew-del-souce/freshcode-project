<!DOCTYPE html>
<html lang="uk">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>ToDo List ‚Äî –ü–æ–∫—Ä–∞—â–µ–Ω–∞ –≤–µ—Ä—Å—ñ—è</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background: #f2f2f2;
      display: flex;
      justify-content: center;
      margin-top: 50px;
    }

    .container {
      background: white;
      padding: 20px 30px;
      border-radius: 12px;
      box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
      width: 100%;
      max-width: 450px;
    }

    h1 {
      text-align: center;
      margin-bottom: 20px;
    }

    .input-group {
      display: flex;
      gap: 10px;
    }

    input[type="text"] {
      flex: 1;
      padding: 10px;
      border: 1px solid #ccc;
      border-radius: 8px;
    }

    button {
      padding: 10px 15px;
      border: none;
      background-color: #4caf50;
      color: white;
      border-radius: 8px;
      cursor: pointer;
    }

    button:hover {
      background-color: #45a049;
    }

    .filters {
      margin-top: 15px;
      display: flex;
      justify-content: space-around;
    }

    .filters button {
      background-color: #e0e0e0;
      color: #333;
    }

    .filters button.active {
      background-color: #4caf50;
      color: white;
    }

    ul {
      list-style-type: none;
      padding: 0;
      margin-top: 20px;
    }

    li {
      display: flex;
      justify-content: space-between;
      align-items: center;
      background: #f1f1f1;
      padding: 10px;
      margin-bottom: 10px;
      border-radius: 8px;
    }

    li.completed span {
      text-decoration: line-through;
      color: gray;
    }

    li span {
      flex: 1;
      cursor: pointer;
    }

    li button {
      background-color: #e53935;
      padding: 5px 10px;
      border-radius: 6px;
      margin-left: 10px;
    }

    li button:hover {
      background-color: #d32f2f;
    }

    .error {
      color: red;
      font-size: 0.9em;
      margin-top: 10px;
      text-align: center;
    }
  </style>
</head>
<body>
  <div class="container">
    <h1>üìã –ú—ñ–π —Å–ø–∏—Å–æ–∫ –∑–∞–≤–¥–∞–Ω—å</h1>
    <div class="input-group">
      <input type="text" id="taskInput" placeholder="–ù–æ–≤–µ –∑–∞–≤–¥–∞–Ω–Ω—è..." />
      <button onclick="addTask()">–î–æ–¥–∞—Ç–∏</button>
    </div>
    <div id="error" class="error"></div>

    <div class="filters">
      <button onclick="setFilter('all')" id="filter-all" class="active">–£—Å—ñ</button>
      <button onclick="setFilter('active')" id="filter-active">–ê–∫—Ç–∏–≤–Ω—ñ</button>
      <button onclick="setFilter('completed')" id="filter-completed">–í–∏–∫–æ–Ω–∞–Ω—ñ</button>
    </div>

    <ul id="taskList"></ul>
  </div>

  <script>
    let tasks = JSON.parse(localStorage.getItem("tasks")) || [];
    let currentFilter = 'all';

    function saveTasks() {
      localStorage.setItem("tasks", JSON.stringify(tasks));
    }

    function renderTasks() {
      const list = document.getElementById("taskList");
      list.innerHTML = "";

      const filteredTasks = tasks.filter(task => {
        if (currentFilter === "all") return true;
        if (currentFilter === "active") return !task.completed;
        if (currentFilter === "completed") return task.completed;
      });

      filteredTasks.forEach((task, index) => {
        const li = document.createElement("li");
        li.className = task.completed ? "completed" : "";

        const span = document.createElement("span");
        span.textContent = task.text;
        span.ondblclick = () => editTask(index);
        span.onclick = () => toggleComplete(index);

        const deleteBtn = document.createElement("button");
        deleteBtn.textContent = "–í–∏–¥–∞–ª–∏—Ç–∏";
        deleteBtn.onclick = () => deleteTask(index);

        li.appendChild(span);
        li.appendChild(deleteBtn);
        list.appendChild(li);
      });
    }

    function addTask() {
      const input = document.getElementById("taskInput");
      const error = document.getElementById("error");
      const text = input.value.trim();

      if (text === "") {
        error.textContent = "–ü–æ–ª–µ –Ω–µ –º–æ–∂–µ –±—É—Ç–∏ –ø–æ—Ä–æ–∂–Ω—ñ–º!";
        return;
      }

      error.textContent = "";
      tasks.push({ text, completed: false });
      input.value = "";
      saveTasks();
      renderTasks();
    }

    function toggleComplete(index) {
      tasks[index].completed = !tasks[index].completed;
      saveTasks();
      renderTasks();
    }

    function deleteTask(index) {
      tasks.splice(index, 1);
      saveTasks();
      renderTasks();
    }

    function editTask(index) {
      const newText = prompt("–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –∑–∞–≤–¥–∞–Ω–Ω—è:", tasks[index].text);
      if (newText !== null) {
        const trimmed = newText.trim();
        if (trimmed !== "") {
          tasks[index].text = trimmed;
          saveTasks();
          renderTasks();
        }
      }
    }

    function setFilter(filter) {
      currentFilter = filter;
      document.querySelectorAll('.filters button').forEach(btn => btn.classList.remove('active'));
      document.getElementById(`filter-${filter}`).classList.add('active');
      renderTasks();
    }

    renderTasks();
  </script>
</body>
</html>
